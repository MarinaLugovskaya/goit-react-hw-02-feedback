{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","persentage","Math","floor","this","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,SAASA,EAAT,GAAyD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBAAQC,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,SACGA,GADwBA,MCFlB,SAASG,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC7D,OACA,+BACA,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UCPa,SAASC,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACvC,OACE,eAACF,EAAD,WACE,6BAAKC,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICOQC,E,4MACnBC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPR,gBAAkB,SAACD,GACjB,EAAKmB,UAAS,SAAAC,GAAS,sBACpBpB,EAASoB,EAAUpB,GAAW,O,EAqB/BqB,mBAAqB,WAC3B,MAA8B,EAAKH,MACnC,OADA,EAAQX,KAAR,EAAaC,QAAb,EAAsBC,K,EAIhBa,gCAAkC,WACxC,IAAIC,EAAaC,KAAKC,MAAO,EAAKP,MAAMX,KAAO,EAAKc,qBAAwB,KAC5E,OAAOE,GAA0B,G,4CAG1B,WACH,MAA+BG,KAAKR,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACA,cAACG,EAAD,CAASC,MAAM,wBAAf,SACE,cAACd,EAAD,CAAiBC,QAAS2B,OAAOC,KAAKF,KAAKR,OAAQjB,gBAAiByB,KAAKzB,oBAG1EyB,KAAKL,qBACJ,cAACT,EAAD,CAASC,MAAM,aAAf,SACE,cAACP,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKL,qBACZV,mBAAoBe,KAAKJ,sCAI7B,cAACP,EAAD,CAAcC,QAAQ,6B,GA5DGa,aCIlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91780de3.chunk.js","sourcesContent":["export default function FeedbackOptions ({ options, onLeaveFeedback }) {\r\n    return options.map(option => (\r\n      <button type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    ));\r\n  };","export default function Statistics({good, neutral, bad, total, positivePercentage}) {\r\n  return (\r\n  <ul>\r\n  <li>Good: {good}</li>\r\n  <li>Neutral: {neutral}</li>\r\n  <li>Bad: {bad}</li>\r\n  <li>Total: {total}</li>\r\n  <li>Positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n  )\r\n};","export default function Section ({title, children}) {\r\n  return (\r\n    <Section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </Section>\r\n  )\r\n};","export default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n};","import React, {Component} from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\n\n\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n\n  onLeaveFeedback = (options) => {\n    this.setState(prevState => ({\n      [options]:prevState[options] + 1,\n        }));\n  }\n\n  // handleGood = () => {\n  //   this.setState(prevState => ({\n  // good: prevState.good + 1,\n  //   }));\n  // };\n\n  // handleNeutral = () => {this.setState(prevState => ({\n  //     neutral: prevState.neutral + 1,\n  //       }));\n  //     };\n\n  // handleBad = () => {this.setState(prevState => ({\n  //     bad: prevState.bad + 1,\n  //       }));\n  //     };\n\n\n      countTotalFeedback = () => {\nconst { good,neutral, bad } = this.state;\nreturn good + neutral + bad;\n        };\n\n      countPositiveFeedbackPercentage = () => {\nlet persentage = Math.floor((this.state.good / this.countTotalFeedback()) * 100);\nreturn persentage ? persentage : 0;\n      }\n\n       render() {\n    const { good, neutral, bad } = this.state;\n    return(\n      <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onLeaveFeedback} />\n      </Section>\n\n      {this.countTotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}